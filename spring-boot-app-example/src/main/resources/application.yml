spring:
    jackson:
        deserialization:
            fail-on-unknown-properties: false
        mapper:
            default-view-inclusion: true
        serialization:
            write-dates-as-timestamps: false
    jpa:
        hibernate:
            ddl-auto: create
        show-sql: false
        open-in-view: false
        properties:
            hibernate:
                dialect: org.hibernate.dialect.PostgreSQLDialect
                enable_lazy_load_no_trans: false
            jakarta.persistence.query.timeout: 1000 # milliseconds
    main.banner-mode: off
    application:
        name: spring-boot-app-example

server:
    port: 8080
    servlet:
        context-path: /api
    # See also https://docs.spring.io/spring-boot/docs/2.7.9/reference/html/application-properties.html#appendix.application-properties.server
    tomcat:
        accept-count: 10
        max-connections: 400
        threads:
            max: 10
            min-spare: 5 # actuator port uses the same configuration
    shutdown: graceful

management:
    server:
        port: 8090
    endpoints:
        enabled-by-default: false
        web:
            exposure.include: health,info,prometheus
    endpoint:
        health:
            enabled: true
            probes.enabled: true
            group:
                readiness:
                    include: readinessState,db
                    additional-path: server:/readyz # In order to collect probes from application main port
                    # show-components: always
        info:
            enabled: true
        prometheus:
            enabled: true
    info:
        env.enabled: true
    health:
        livenessstate:
            enabled: true
        readinessstate:
            enabled: true
    metrics:
        distribution:
            percentiles-histogram:
                http.server.requests: true
            minimum-expected-value:
                http.server.requests: 10ms
            maximum-expected-value:
                http.server.requests: 10s
            slo:
                http.server.requests: 1s
    prometheus:
        metrics:
            export:
                enabled: true
