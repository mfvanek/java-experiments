plugins {
    id 'jacoco'
    id 'com.github.spotbugs' version '5.0.14'
    id 'checkstyle'
    id 'org.sonarqube' version '4.0.0.2929'
    id 'pmd'
    id 'net.ltgt.errorprone' version '3.1.0'
    id 'io.freefair.lombok' version '8.0.1'
    id 'org.gradle.test-retry' version '1.5.3'
}

description = 'Experiments with Java'

allprojects {
    group 'io.github.mfvanek'
    version '0.0.1-SNAPSHOT'

    repositories {
        mavenLocal()
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    //apply plugin: 'org.sonarqube'
    //apply plugin: 'checkstyle'
    //apply plugin: 'pmd'
    //apply plugin: 'com.github.spotbugs'
    apply plugin: 'jacoco'
    //apply plugin: 'net.ltgt.errorprone'
    apply plugin: 'io.freefair.lombok'
    apply plugin: 'org.gradle.test-retry'

    ext {
        jsr305Version = '3.0.2'
        postgresqlVersion = '42.6.0'
        slf4jVersion = '2.0.7'
        logbackVersion = '1.4.7'
        hikariVersion = '5.0.1'
        pgihVersion = '0.9.1'
    }

    dependencies {
        implementation "com.google.code.findbugs:jsr305:${jsr305Version}"
        implementation enforcedPlatform('org.testcontainers:testcontainers-bom:1.18.1')

        testImplementation 'org.assertj:assertj-core:3.24.2'
        testImplementation enforcedPlatform('org.junit:junit-bom:5.9.3')
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
        testImplementation 'org.junit.jupiter:junit-jupiter-api'

        //checkstyle 'com.thomasjensen.checkstyle.addons:checkstyle-addons:7.0.1'
        //errorprone 'com.google.errorprone:error_prone_core:2.18.0'
    }

    java {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    tasks.withType(Test).configureEach {
        useJUnitPlatform()
        retry {
            maxRetries = 2
            maxFailures = 10
            failOnPassedAfterRetry = false
        }
    }

//    tasks.withType(JavaCompile).configureEach {
//        options.errorprone {
//            disableWarningsInGeneratedCode = true
//            disable('StringSplitter', 'ImmutableEnumChecker', 'FutureReturnValueIgnored', 'EqualsIncompatibleType')
//        }
//    }
//
//    checkstyle {
//        toolVersion '10.5.0'
//        configFile file("../config/checkstyle/checkstyle.xml")
//        ignoreFailures = false
//        maxWarnings = 0
//        maxErrors = 0
//    }
//
//    pmd {
//        consoleOutput = true
//        toolVersion = '6.52.0'
//        ruleSetFiles = files("../config/pmd/pmd.xml")
//        ruleSets = []
//    }
//
//    spotbugs {
//        showProgress = true
//        effort = 'max'
//        reportLevel = 'low'
//        excludeFilter = file("../config/spotbugs/exclude.xml")
//    }
//    tasks.withType(SpotBugsTask).configureEach {
//        reports {
//            xml.required = true
//            html.required = true
//        }
//    }
}
